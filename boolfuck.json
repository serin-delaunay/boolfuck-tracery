{
	"info": "Boolfuck on Tracery is written by Serin Delaunay (with help from Eli Dupree)",

	"origin": "#debug_init##run#",

	"instructions_text": "+;+;+;>;+;+;<;",
	"expected_output": "1010101",
	"debug_init": "[run_next:][instrs_upper:;][instrs_upper:<][instrs_upper:;][instrs_upper:+][instrs_upper:;][instrs_upper:+][instrs_upper:;][instrs_upper:>][instrs_upper:;][instrs_upper:+][instrs_upper:;][instrs_upper:+][instrs_upper:;][instrs_upper:+]",
	"init": "This tag must be overwritten by the bftracery compiler.#FAIL#",

	"run": "#drop_next##run_step##run_next#",
	"run_step": "#read_instr##load_instr##exec_instr##drop_exec##drop_instr##exec_advance##drop_advance#",

	"read_instr": "[r_instr:#instrs_upper#]",
	"load_instr": "[exec_instr:#activate_instr#]",
	"activate_instr": "\\##r_instr#\\#",
	"drop_instr": "[r_instr:POP]",
	"drop_exec": "[exec_instr:POP]",

	"load_advance": "[r_next:#instrs_upper#][exec_advance:#activate_advance#][r_next:POP]",
	"activate_advance": "\\#advance#r_next#\\#",
	"advance": "[instrs_lower:#instrs_upper#][instrs_upper:POP][run_next:#activate_next#]",
	"activate_next": "\\#run\\#",
	"drop_next": "[run_next:POP]",
	"drop_advance": "[exec_advance:POP]",
	"advance+": "#advance#",
	"advance`": "#advance#",
	"advance;": "#advance#",
	"advance<": "#advance#",
	"advance>": "#advance#",
	"advance(": "#advance#",
	"advance)": "#advance#",
	"advanceEND": "",

	"+": "#read_data##load_flipper##drop_data##exec_flipper##drop_flipper##load_advance#",
	"`": "#read_input##load_setter##drop_input##exec_setter##drop_setter##load_advance#",
	";": "#read_output##load_printer##drop_output##exec_printer##drop_printer##load_advance#",
	"<": "#read_data_lower##load_left##drop_lower##exec_left##drop_left##load_advance#",
	">": "#read_data_upper##load_right##drop_upper##exec_right##drop_right##load_advance#",
	"(": "Search forward.#FAIL#",
	")": "Search backward.#FAIL#",
	"END": "#load_advance#",

	"read_data": "[r_data:#data_upper#]",
	"load_flipper": "[exec_flipper:#activate_flipper#]",
	"activate_flipper": "\\#flip#r_data#\\#",
	"drop_data": "[r_data:POP]",
	"flip0": "[data_upper:POP][data_upper:1]",
	"flip1": "[data_upper:POP][data_upper:0]",
	"flipEND": "[data_upper:1]",
	"drop_flipper": "[exec_flipper:POP]",

	"read_input": "[r_input:#input#]",
	"load_setter": "[exec_setter:#activate_setter#]",
	"activate_setter": "\\#set#r_input#\\#",
	"drop_input": "[r_input:POP]",
	"drop_setter": "[exec_setter:POP]",
	"set0": "[data_upper:POP][data_upper:0][input:POP]",
	"set1": "[data_upper:POP][data_upper:1][input:POP]",
	"setEND": "[data_upper:0]",

	"read_output": "[r_output:#data_upper#]",
	"load_printer": "[exec_printer:#activate_printer#]",
	"activate_printer": "\\#print#r_output#\\#",
	"drop_output": "[r:output:POP]",
	"drop_printer": "[exec_printer:POP]",
	"print0": "0",
	"print1": "1",
	"printEND": "0",

	"read_data_lower": "[r_lower:#data_lower#]",
	"load_left": "[exec_left:#activate_left#]",
	"drop_lower": "[r_lower:POP]",
	"drop_left": "[exec_left:POP]",
	"activate_left": "\\#left#r_lower#\\#",
	"left0": "[data_upper:0][data_lower:POP]",
	"left1": "[data_upper:1][data_lower:POP]",
	"leftEND": "[data_upper:0]",

	"read_data_upper": "[r_upper:#data_upper#]",
	"load_right": "[exec_right:#activate_right#]",
	"drop_upper": "[r_upper:POP]",
	"drop_right": "[exec_right:POP]",
	"activate_right": "\\#right#r_upper#\\#",
	"right0": "[data_lower:0][data_upper:POP]",
	"right1": "[data_lower:1][data_upper:POP]",
	"rightEND": "[data_lower:0]",

	"run_next": "",
	"instrs_lower": "END",
	"instrs_upper": "END",
	"data_lower": "END",
	"data_upper": "END",
	"brackets": "END",
	"input": "END",
	"FAIL": "#FAIL#"
}